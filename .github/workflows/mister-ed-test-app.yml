name: Build and deploy .NET application to container app mister-ed-test-app
on:
  push:
    branches:
    - main
env:
  CONTAINER_APP_CONTAINER_NAME: mister-ed-sqldb
  CONTAINER_APP_NAME: mister-ed-test-app
  CONTAINER_APP_RESOURCE_GROUP_NAME: SENG350
  CONTAINER_REGISTRY_LOGIN_SERVER: dotnetcoresqldb20231017081000.azurecr.io
  DOTNET_CORE_VERSION: 7.0.x
  PROJECT_NAME_FOR_DOCKER: dotnetcoresqldb
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout to the branch
      uses: actions/checkout@v3
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v1.8.0
      with:
        include-prerelease: True
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    - name: Log in to container registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.DotNetCoreSqlDb20231017081000_USERNAME_7A49 }}
        password: ${{ secrets.DotNetCoreSqlDb20231017081000_PASSWORD_7A49 }}
    - name: Build and push container image to registry
      run: dotnet publish -c Release -r linux-x64 -p:PublishProfile=DefaultContainer -p:ContainerImageTag=${{ github.sha }} --no-self-contained -p:ContainerRegistry=${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }} -bl
    - name: Upload binlog for investigation
      uses: actions/upload-artifact@v3
      with:
        if-no-files-found: error
        name: binlog
        path: msbuild.binlog
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds:  ${{ secrets.AZURE_CREDENTIALS }}
    - name: Deploy to containerapp
      uses: azure/CLI@v1
      with:
        inlineScript: >
          az config set extension.use_dynamic_install=yes_without_prompt

          az containerapp registry set --name ${{ env.CONTAINER_APP_NAME }} --resource-group ${{ env.CONTAINER_APP_RESOURCE_GROUP_NAME }} --server ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }} --username ${{ secrets.DotNetCoreSqlDb20231017081000_USERNAME_7A49 }} --password ${{ secrets.DotNetCoreSqlDb20231017081000_PASSWORD_7A49 }}

          az containerapp update --name ${{ env.CONTAINER_APP_NAME }} --container-name ${{ env.CONTAINER_APP_CONTAINER_NAME }} --resource-group ${{ env.CONTAINER_APP_RESOURCE_GROUP_NAME }} --image ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.PROJECT_NAME_FOR_DOCKER }}:${{ github.sha }}
    - name: logout
      run: >
        az logout
    - name: Run EF 
      run: | 
        dotnet tool install --global dotnet-ef
        # dotnet tool restore
        dotnet ef database update -p ./DotNetCoreSqlDb.csproj --connection '${{ secrets.DBConnection }}'
